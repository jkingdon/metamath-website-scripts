##
#
# See: /etc/nginx/sites-available/
#
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# Admins should put this file in /etc/nginx/sites-available/
# and then put a link to it from /etc/nginx/sites-enabled/
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	listen [::]:443 ssl;
	listen 443 ssl;

	server_name us.metamath.org;

	root /var/www/us.metamath.org/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	location / {
		# We only serve data, so don't allow anything else.
		limit_except GET HEAD OPTIONS {
			deny all;
		}

		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;

                # Counter clickjacking attacks via framebusting. See:
                # https://scotthelme.co.uk/hardening-your-http-response-headers/#x-frame-options
                add_header X-Frame-Options "SAMEORIGIN" always;

                # Enable CORS so web browser apps can request our data.
                # https://enable-cors.org/server_nginx.html
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.3-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}

	# Harden per https://www.cyberciti.biz/tips/linux-unix-bsd-nginx-webserver-security.html
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";

	# TLS certificates managed by Certbot for Let's Encrypt.
	ssl_certificate /etc/letsencrypt/live/us.metamath.org/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/us.metamath.org/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

server {
	listen 80 ;
	listen [::]:80 ;
	server_name us.metamath.org;

	# Harden per https://www.cyberciti.biz/tips/linux-unix-bsd-nginx-webserver-security.html
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";

	location / {
		# We only serve data, so don't allow anything else.
		limit_except GET HEAD OPTIONS {
			deny all;
		}
	}

	# Use 302 for temporary redirect, use 301 to tell people "use HTTPS".
	return 301 https://$host$request_uri;
}
